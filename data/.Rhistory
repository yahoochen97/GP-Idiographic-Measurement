?chol
?mvnnorm
source('~/Documents/GitHub/GP_gradient/GPR/SyntheticDataGen_LatLong.R', echo=TRUE)
plogis(-2)
? rbinom
rbinom(N, df_group$n, plogis(theta))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
rbinom(1,47,plogis(-2))
plogis(0)
source('~/Documents/GitHub/GP_gradient/GPR/SyntheticDataGen_LatLong.R', echo=TRUE)
source('~/Documents/GitHub/GP_gradient/GPR/SyntheticDataGen_LatLong.R', echo=TRUE)
source('~/Documents/GitHub/GP_gradient/GPR/SyntheticDataGen_LatLong.R', echo=TRUE)
plogis(2)
qlogis(0.88079)
ln(1)
qlogis(0.88079)
log(2)
log(10)
log(1+exp(2))
?plogis
source('~/Documents/GitHub/GP_gradient/GPR/SyntheticDataGen_LatLong.R', echo=TRUE)
latitude_u
longitude_u
head(df_group)
theta
sd(theta)
source('~/Documents/GitHub/GP-Idiographic-Measurement/data/LOOPRP code.R', echo=TRUE)
setwd("~/Documents/GitHub/GP-Idiographic-Measurement/data")
source('~/Documents/GitHub/GP-Idiographic-Measurement/data/LOOPRP code.R', echo=TRUE)
warnings()
items
Data[,1]
Data[,2]
Data[,3]
unique(Data[,1])
nrow(items)
facets
itemres
facets[1,]
domains[1,]
items[1,]
write.csv(items,"loopr_data.csv")
names(items)
3459*60
unique(items)
sum(is.na(items))
